<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--<SolidColorBrush x:Key="BlackBrush" Color="Black"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="White"/>-->
    
    <Style x:Key="DataGridColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle HorizontalAlignment="Center" Width="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
         <Style x:Key="ColumnHeaderGripperStyle"
       TargetType="{x:Type Thumb}">
  <Setter Property="Width"
          Value="8" />
  <Setter Property="Background"
          Value="Transparent" />
  <Setter Property="Cursor"
          Value="SizeWE" />
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Thumb}">
        <Border Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Height" Value="48"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource WhitekBrush}"/>
        <!--<Setter Property="Background" Value="Transparent/>-->
        <Setter Property="Background" Value="{DynamicResource BlackkBrush}"/><!--"Transparent" />-->
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" VerticalAlignment="Stretch"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderThickness="0,0,0,0" BorderBrush="Gray" Padding="5">
                        <StackPanel VerticalAlignment="Center">
                            <!-- This is used when GridView is put inside the ListView -->
                            <DataGridRowsPresenter 
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <!--<Separator Visibility="Hidden" x:Name="sep" Foreground="Black" Height="10" Width="Auto"/>-->
                            <!-- This is used for ListView that does not use GridView -->
                            <ContentPresenter x:Name="contentPresenter" 
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                    </Trigger>-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#F5F5F5" />
                            <Setter Property="Foreground" Value="Black" />
                            <!--<Setter TargetName="sep" Property="UIElement.Visibility" Value="Visible"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#EEEEEE" />-->
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <!--<Condition Property="Selector.IsSelectionActive" Value="true" />-->
                </MultiTrigger.Conditions>
                <!--<Setter Property="Template" Value="{StaticResource SelectedTemplate}" />
                <Setter Property="Background" Value="#FFB3D0E5" />-->
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--RS1.5-->
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
        <Setter Property="Width" Value="Auto"/>
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid HorizontalAlignment="Stretch" Width="{TemplateBinding Width}">
                         <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                        <!--底框-->
                        <!--<Border Name="HeaderBorder" BorderThickness="0,0,0,5" BorderBrush="#E0E0E0" MinHeight="43" Background="#FAFAFA">-->
                        <Border Name="HeaderBorder" BorderThickness="0,0,0,3" BorderBrush="#E0E0E0" MinHeight="43" Background="{TemplateBinding Background}" Padding="10">
                            <ContentPresenter Name="HeaderContent"
                                              TextElement.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Ideal" TextOptions.TextRenderingMode="Auto" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </ContentPresenter>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                 HorizontalAlignment="Left"
                 Style="{StaticResource ColumnHeaderGripperStyle}" />
          <Thumb x:Name="PART_RightHeaderGripper"
                 HorizontalAlignment="Right"
                 Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <!--<Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,0,0"       Grid.Column="1"
                               Width="2"            BorderThickness="1"
                               BorderBrush="{Binding VerticalGridLinesBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                        Cursor="SizeWE">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Border BorderBrush="#E0E0E0" BorderThickness="0,0,0,0">
                                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"  Width="1" />
                                    </Border>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="#EEEEEE"/>
                            <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    
</ResourceDictionary>